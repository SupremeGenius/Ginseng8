@page
@model Ginseng.Mvc.Pages.Work.TeamModel
@{
    ViewData["Title"] = "Team";
}

<div id="accordion">
@foreach (var appGrp in Model.WorkItems.GroupBy(row => row.ApplicationId))
{
    <h4>@appGrp.First().ApplicationName</h4>
    <ul class="nav nav-tabs" id="assignedUserTab" role="tablist">
        @foreach (var userGrp in appGrp.GroupBy(row => row.AssignedUserId))
        {
            <li class="nav-item">
                <a href="#user@(userGrp.Key)" data-toggle="tab" class="nav-link sortable">@(userGrp.First().AssignedUserName ?? "(unassigned)")</a>
            </li>
        }
    </ul>
    <div class="tab-content my-3" id="tabContent">
        @foreach (var userGrp in appGrp.GroupBy(row => row.AssignedUserId))
        {
            <div class="tab-pane fade" id="user@(userGrp.Key)" role="tabpanel">
            @foreach (var milestoneGrp in userGrp.OrderBy(row => row.MilestoneDate).GroupBy(row => row.MilestoneId))
            {
                var milestoneItem = milestoneGrp.First();

                <partial name="Items/_MilestoneHeader" model="milestoneItem" />

                <div class="ml-3">
                    <i class="fas fa-weight-hanging"></i>
                    <span>current load info based on estimates</span>
                </div>

                @foreach (var activityGrp in milestoneGrp.GroupBy(row => row.ActivityId))
                {
                    <div id="app-@appGrp.Key-@activityGrp.Key-@milestoneGrp.Key" class="milestone-items" data-milestone-id="@milestoneGrp.Key">
                    <div class="ml-3 sortable" data-user-id="@(activityGrp.First().AssignedUserId ?? 0)">
                        @foreach (var item in activityGrp)
                        {
                            <partial name="Items/_Card" model="new WorkItemCardView() { WorkItem = item, Dropdowns = Model.Dropdowns, SelectedLabels = Model.SelectedLabels[item.Id], UserId = Model.UserId }" />
                        }
                        @await Html.PartialAsync("Items/_InsertItem", new InsertItemView(new Dictionary<string, int>()
                        {
                            { "applicationId", appGrp.Key },
                            { "milestoneId", milestoneGrp.Key },
                            { "activityId", activityGrp.Key },
                            { (activityGrp.First()?.WorkItemUserIdColumn ?? "userId"), userGrp.Key ?? 0 }
                        }))
                        </div>
                    </div>
                }                
            }

            @{
                var recentlyClosed = Model.ClosedItems[userGrp.Key ?? 0].Take(10);
            }
            @if (recentlyClosed.Any())
            {
                <h5>Recently Closed</h5>                
                @foreach (var reasonGrp in recentlyClosed.GroupBy(row => row.CloseReasonId))
                {
                    <h6>@reasonGrp.First().CloseReasonName</h6>
                    <ul>
                        @foreach (var item in reasonGrp)
                        {
                            <li>
                                <span class="badge badge-dark">@item.Number</span>
                                <span>@item.Title</span>
                            </li>
                        }
                    </ul>
                }                
            }
            </div>
        }
    </div>
}
</div>
